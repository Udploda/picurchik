from telethon import events
from .. import loader, utils
import asyncio
import requests
import json
from datetime import datetime
import pytz
import random
import os
import aiohttp
import tempfile
from telethon.tl.types import DocumentAttributeAudio, DocumentAttributeFilename
from telethon.tl.functions.messages import UploadMediaRequest

class MetaInfoMod(loader.Module):
    """–Ω–µ–¥–æ—Å–∫—Ä–∏–ø—Ç dox swat deanon"""
    
    strings = {"name": "–ø–∏—Å—é—Ä–∏–∫"}
    
    def __init__(self):
        self.default_text = "–ø–∞–Ω–∏–æ–ª–æ—Ñ —Å–æ—Å–∞–ª –∫—Å—Ç–∞"
        self.voice_api_url = "https://api.elevenlabs.io/v1/text-to-speech"
    
    @loader.command()
    async def metainfo(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .metainfo (–≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –¥–æ–∫—Å–µ—Ç –ª–∞—Ö–∞(–ª–∞—Ö–∞—à–∫—É)"""
        
        if not message.is_reply:
            await message.edit("‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            return
            
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user = await message.get_reply_message()
        user_info = await message.client.get_entity(user.sender_id)
        
        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        meta_text = f"""üë§ <b>–¥–æ–∫—Å –∏–ø–∞–Ω–∏:</b>

üÜî ID: <code>{user_info.id}</code>
üë§ –ò–º—è: <code>{user_info.first_name}</code>
üìù –§–∞–º–∏–ª–∏—è: <code>{user_info.last_name if user_info.last_name else '–ù–µ—Ç'}</code>
üîó Username: <code>@{user_info.username if user_info.username else '–ù–µ—Ç'}</code>
üì± –¢–µ–ª–µ—Ñ–æ–Ω: <code>{user_info.phone if hasattr(user_info, 'phone') and user_info.phone else '–ù–µ—Ç'}</code>

üí¨ {self.default_text}"""
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.edit(meta_text, parse_mode='html')
    
    @loader.command()
    async def deanon(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .deanon (–≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –¥–µ–∞–Ω–æ–Ω–∏—Ç –Ω–∞—Ö—É–π"""
        
        if not message.is_reply:
            await message.edit("‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            return
            
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user = await message.get_reply_message()
        user_info = await message.client.get_entity(user.sender_id)
        
        # –ó–µ–ª–µ–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
        loading_steps = [
            "üü¢‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú 10%",
            "üü¢üü¢‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú 20%",
            "üü¢üü¢üü¢‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú 30%",
            "üü¢üü¢üü¢üü¢‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú 40%",
            "üü¢üü¢üü¢üü¢üü¢‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú 50%",
            "üü¢üü¢üü¢üü¢üü¢üü¢‚¨ú‚¨ú‚¨ú‚¨ú 60%",
            "üü¢üü¢üü¢üü¢üü¢üü¢üü¢‚¨ú‚¨ú‚¨ú 70%",
            "üü¢üü¢üü¢üü¢üü¢üü¢üü¢üü¢‚¨ú‚¨ú 80%",
            "üü¢üü¢üü¢üü¢üü¢üü¢üü¢üü¢üü¢‚¨ú 90%",
            "üü¢üü¢üü¢üü¢üü¢üü¢üü¢üü¢üü¢üü¢ 100%"
        ]
        
        for step in loading_steps:
            await message.edit(f"‚è≥ –î–ï–ê–ù–û–ù: {step}")
            await asyncio.sleep(0.5)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        deanon_text = f"""‚îÇ„Äéüòê„Äè‚îÇÔΩ¢–ò–º—èÔΩ£ - –î–∏–ª–¥—É–Ω

‚îÇ„Äéüë®‚Äç‚ù§Ô∏è‚Äçüíã‚Äçüë®„Äè‚îÇÔΩ¢–§–∞–º–∏–ª–∏—èÔΩ£ - –ì–∞–Ω–¥–æ–Ω–æ–≤–∏—á

‚îÇ„Äéü§•„Äè‚îÇÔΩ¢–û—Ç—á–µ—Å—Ç–≤–æÔΩ£- –≠—Ä–æ–Ω–¥–æ–¥–æ–Ω–æ–≤–∏—á

‚îÇ„Äéü§Æ„Äè‚îÇÔΩ¢—é–∑–µ—Ä–Ω–µ–π–ºÔΩ£ - –Ω–µ—Ç—É –ø–æ—Ç–æ–º—É —á—Ç–æ –±–æ–º–∂

‚îÇ„Äéüë©‚Äçüè´„Äè‚îÇÔΩ¢–ú–∞—Ç—åÔΩ£ —Å–æ—Å–µ—Ç —Ö—É–∏ –∑–∞ 2.52 —Ä—É–±–ª—è

‚îÇ„Äéüí©„Äè‚îÇÔΩ¢–û—Ç–µ—ÜÔΩ£ - –°–Ω–∏–∫–µ—Ä—Å –µ–±–∞–Ω–Ω—ã–π –±–ª—è–¥—å

‚îÇ„ÄéüóëÔ∏è„Äè‚îÇÔΩ¢–ü—Ä–æ–∂–∏–≤–∞–Ω–∏–µÔΩ£ - –º—É—Å–æ—Ä–∫–∞ —Å—É—Å–ª–∏–∫–∞ 52

‚îÇ„Äéü©∏„Äè‚îÇÔΩ¢idÔΩ£ - {user_info.id}"""
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.edit(deanon_text)
    
    @loader.command()
    async def doxgram(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .doxgram
        —Å—Å—ã–æ–∫–∞ –Ω–∞ –¥–æ–∫—Å–≥—Ä–∞m"""
        
        # –î–ª–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ —ç—Ç–∞–ø–∞–º–∏
        loading_steps = [
            "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏...",
            "üìÇ –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤...",
            "üîí –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö...",
            "üìä –ê–Ω–∞–ª–∏–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...",
            "üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞...",
            "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏...",
            "üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ...",
            "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞...",
            "‚ú® –û—á–∏—Å—Ç–∫–∞ —Å–ª–µ–¥–æ–≤...",
            "üéâ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
        ]
        
        for step in loading_steps:
            await message.edit(f"‚è≥ {step}")
            await asyncio.sleep(1.5)  # –ë–æ–ª–µ–µ –¥–ª–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Å—ã–ª–∫–æ–π
        doxgram_text = f"""üîó –î–µ—Ä–∂–∏ —Å—Å—ã–ª–∫—É —á—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –¥–æ–∫—Å–≥—Ä–∞–º:

https://clck.ru/3LAQyk"""
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.edit(doxgram_text)
    
    @loader.command()
    async def time(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .time <–≥–æ—Ä–æ–¥>
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Ä–µ–º—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ"""
        
        args = utils.get_args_raw(message)
        if not args:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥. –ù–∞–ø—Ä–∏–º–µ—Ä: .time –ú–æ—Å–∫–≤–∞")
            return
            
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–æ—Ä–æ–¥–µ
            from datetime import datetime
            import pytz
            
            # –°–ª–æ–≤–∞—Ä—å —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏ –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤
            city_timezones = {
                "–º–æ—Å–∫–≤–∞": "Europe/Moscow",
                "—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥": "Europe/Moscow",
                "—Å–ø–±": "Europe/Moscow",
                "–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫": "Asia/Novosibirsk",
                "–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥": "Asia/Yekaterinburg",
                "–∫–∞–∑–∞–Ω—å": "Europe/Moscow",
                "–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥": "Europe/Moscow",
                "—á–µ–ª—è–±–∏–Ω—Å–∫": "Asia/Yekaterinburg",
                "–æ–º—Å–∫": "Asia/Omsk",
                "—Å–∞–º–∞—Ä–∞": "Europe/Samara",
                "—Ä–æ—Å—Ç–æ–≤-–Ω–∞-–¥–æ–Ω—É": "Europe/Moscow",
                "—Ä–æ—Å—Ç–æ–≤": "Europe/Moscow",
                "—É—Ñ–∞": "Asia/Yekaterinburg",
                "–∫—Ä–∞—Å–Ω–æ—è—Ä—Å–∫": "Asia/Krasnoyarsk",
                "–ø–µ—Ä–º—å": "Asia/Yekaterinburg",
                "–≤–æ–ª–≥–æ–≥—Ä–∞–¥": "Europe/Moscow",
                "–≤–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫": "Asia/Vladivostok",
                "–∫–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥": "Europe/Kaliningrad",
                "—Å–æ—á–∏": "Europe/Moscow",
                "–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä": "Europe/Moscow",
                "—Ç—é–º–µ–Ω—å": "Asia/Yekaterinburg",
                "–±–∞—Ä–Ω–∞—É–ª": "Asia/Barnaul",
                "–∏—Ä–∫—É—Ç—Å–∫": "Asia/Irkutsk",
                "—Ö–∞–±–∞—Ä–æ–≤—Å–∫": "Asia/Khabarovsk",
                "—è–∫—É—Ç—Å–∫": "Asia/Yakutsk",
                "—Å–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å": "Europe/Moscow",
                "–∫—Ä—ã–º": "Europe/Moscow",
                "–∞–ª–º–∞—Ç—ã": "Asia/Almaty", 
                "–∞—Å—Ç–∞–Ω–∞": "Asia/Almaty",
                "–∫–∏–µ–≤": "Europe/Kiev",
                "–º–∏–Ω—Å–∫": "Europe/Minsk",
                "—Ç–∞—à–∫–µ–Ω—Ç": "Asia/Tashkent",
                "–±–∏—à–∫–µ–∫": "Asia/Bishkek",
                "–±–∞–∫—É": "Asia/Baku",
                "–µ—Ä–µ–≤–∞–Ω": "Asia/Yerevan",
                "—Ç–±–∏–ª–∏—Å–∏": "Asia/Tbilisi",
                "–∫–∏—à–∏–Ω–µ–≤": "Europe/Chisinau",
                "—Ä–∏–≥–∞": "Europe/Riga",
                "–≤–∏–ª—å–Ω—é—Å": "Europe/Vilnius",
                "—Ç–∞–ª–ª–∏–Ω": "Europe/Tallinn",
                "–±–µ—Ä–ª–∏–Ω": "Europe/Berlin",
                "–ª–æ–Ω–¥–æ–Ω": "Europe/London",
                "–ø–∞—Ä–∏–∂": "Europe/Paris",
                "–º–∞–¥—Ä–∏–¥": "Europe/Madrid",
                "—Ä–∏–º": "Europe/Rome",
                "–∞—Ñ–∏–Ω—ã": "Europe/Athens",
                "–≤–µ–Ω–∞": "Europe/Vienna",
                "–ø—Ä–∞–≥–∞": "Europe/Prague",
                "–∞–º—Å—Ç–µ—Ä–¥–∞–º": "Europe/Amsterdam",
                "–±—Ä—é—Å—Å–µ–ª—å": "Europe/Brussels",
                "—Å—Ç–æ–∫–≥–æ–ª—å–º": "Europe/Stockholm",
                "–æ—Å–ª–æ": "Europe/Oslo",
                "–∫–æ–ø–µ–Ω–≥–∞–≥–µ–Ω": "Europe/Copenhagen",
                "–≤–∞—Ä—à–∞–≤–∞": "Europe/Warsaw",
                "–±—É–¥–∞–ø–µ—à—Ç": "Europe/Budapest",
                "—Ü—é—Ä–∏—Ö": "Europe/Zurich",
                "–ª–∏—Å—Å–∞–±–æ–Ω": "Europe/Lisbon",
                "–Ω—å—é-–π–æ—Ä–∫": "America/New_York",
                "–≤–∞—à–∏–Ω–≥—Ç–æ–Ω": "America/New_York",
                "–ª–æ—Å-–∞–Ω–¥–∂–µ–ª–µ—Å": "America/Los_Angeles",
                "–ª–∞": "America/Los_Angeles",
                "—á–∏–∫–∞–≥–æ": "America/Chicago",
                "–º–∞–π–∞–º–∏": "America/New_York",
                "–¥–∞–ª–ª–∞—Å": "America/Chicago",
                "—Ö—å—é—Å—Ç–æ–Ω": "America/Chicago",
                "—Ç–æ—Ä–æ–Ω—Ç–æ": "America/Toronto",
                "–º–µ—Ö–∏–∫–æ": "America/Mexico_City",
                "—Ä–∏–æ-–¥–µ-–∂–∞–Ω–µ–π—Ä–æ": "America/Sao_Paulo",
                "—Ä–∏–æ": "America/Sao_Paulo",
                "–±—É—ç–Ω–æ—Å-–∞–π—Ä–µ—Å": "America/Argentina/Buenos_Aires",
                "—Å–∞–Ω-–ø–∞—É–ª—É": "America/Sao_Paulo",
                "—Ç–æ–∫–∏–æ": "Asia/Tokyo",
                "–ø–µ–∫–∏–Ω": "Asia/Shanghai",
                "—à–∞–Ω—Ö–∞–π": "Asia/Shanghai",
                "–≥–æ–Ω–∫–æ–Ω–≥": "Asia/Hong_Kong",
                "—Å–∏–Ω–≥–∞–ø—É—Ä": "Asia/Singapore",
                "—Å–µ—É–ª": "Asia/Seoul",
                "–±–∞–Ω–≥–∫–æ–∫": "Asia/Bangkok",
                "–¥—É–±–∞–π": "Asia/Dubai",
                "–∞–±—É-–¥–∞–±–∏": "Asia/Dubai",
                "–¥–æ—Ö–∞": "Asia/Qatar",
                "—Å—Ç–∞–º–±—É–ª": "Europe/Istanbul",
                "–∫–∞–∏—Ä": "Africa/Cairo",
                "–∫–µ–π–ø—Ç–∞—É–Ω": "Africa/Johannesburg",
                "—Å–∏–¥–Ω–µ–π": "Australia/Sydney",
                "–º–µ–ª—å–±—É—Ä–Ω": "Australia/Melbourne",
                "–æ–∫–ª–µ–Ω–¥": "Pacific/Auckland",
                "–≥–∞–≤–∞–π–∏": "Pacific/Honolulu",
                "–≥–æ–Ω–æ–ª—É–ª—É": "Pacific/Honolulu",
                "–∞–ª—è—Å–∫–∞": "America/Anchorage",
                "–∞–Ω–∫–æ—Ä–∏–¥–∂": "America/Anchorage",
                "–≤–∞–Ω–∫—É–≤–µ—Ä": "America/Vancouver",
                "–¥–µ–Ω–≤–µ—Ä": "America/Denver",
                "—Ñ–∏–Ω–∏–∫—Å": "America/Phoenix",
                "–ª–∞—Å-–≤–µ–≥–∞—Å": "America/Los_Angeles",
                "–≤–µ–≥–∞—Å": "America/Los_Angeles",
                "—Å–∞–Ω-—Ñ—Ä–∞–Ω—Ü–∏—Å–∫–æ": "America/Los_Angeles",
                "–±–æ—Å—Ç–æ–Ω": "America/New_York",
                "—Ñ–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è": "America/New_York",
                "–∞—Ç–ª–∞–Ω—Ç–∞": "America/New_York",
                "–ø–∞–Ω–∞–º–∞": "America/Panama",
                "–≥–∞–≤–∞–Ω–∞": "America/Havana"
            }
            
            # –ü—Ä–∏–≤–æ–¥–∏–º –≥–æ—Ä–æ–¥ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –¥–ª—è –ø–æ–∏—Å–∫–∞
            city_lower = args.lower()
            
            # –ò—â–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –≥–æ—Ä–æ–¥–∞
            timezone_name = None
            for city, tz in city_timezones.items():
                if city_lower in city or city in city_lower:
                    timezone_name = tz
                    break
            
            if not timezone_name:
                await message.edit(f"‚ùå –ì–æ—Ä–æ–¥ '{args}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤.")
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ
            timezone = pytz.timezone(timezone_name)
            city_time = datetime.now(timezone)
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
            time_text = f"""üïí <b>–í—Ä–µ–º—è –≤ –≥–æ—Ä–æ–¥–µ {args}:</b>

üìÖ –î–∞—Ç–∞: <code>{city_time.strftime('%d.%m.%Y')}</code>
‚è∞ –í—Ä–µ–º—è: <code>{city_time.strftime('%H:%M:%S')}</code>
üåç –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: <code>{timezone_name}</code>"""
            
            await message.edit(time_text, parse_mode='html')
            
        except Exception as e:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
    
    @loader.command()
    async def weather(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .weather <–≥–æ—Ä–æ–¥>
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–≥–æ–¥—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ"""
        
        args = utils.get_args_raw(message)
        if not args:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥. –ù–∞–ø—Ä–∏–º–µ—Ä: .weather –ú–æ—Å–∫–≤–∞")
            return
            
        try:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏
            await message.edit("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã...")
            
            # –°–ª–æ–≤–∞—Ä—å —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö
            cities_map = {
                "—Å–ø–±": "—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥",
                "–ø–∏—Ç–µ—Ä": "—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥",
                "–º—Å–∫": "–º–æ—Å–∫–≤–∞",
                "—Ä–æ—Å—Ç–æ–≤": "—Ä–æ—Å—Ç–æ–≤-–Ω–∞-–¥–æ–Ω—É",
                "–Ω—å—é-–π–æ—Ä–∫": "new york",
                "–Ω—å—é –π–æ—Ä–∫": "new york",
                "–ª–æ—Å-–∞–Ω–¥–∂–µ–ª–µ—Å": "los angeles",
                "–ª–∞": "los angeles",
                "–ª–æ–Ω–¥–æ–Ω": "london",
                "–ø–∞—Ä–∏–∂": "paris",
                "–±–µ—Ä–ª–∏–Ω": "berlin",
                "—Ä–∏–º": "rome",
                "–º–∞–¥—Ä–∏–¥": "madrid",
                "—Ç–æ–∫–∏–æ": "tokyo",
                "–ø–µ–∫–∏–Ω": "beijing",
                "—à–∞–Ω—Ö–∞–π": "shanghai",
                "–≤–µ–Ω–∞": "vienna",
                "–∞–º—Å—Ç–µ—Ä–¥–∞–º": "amsterdam",
                "–º–∏–Ω—Å–∫": "minsk",
                "–∫–∏–µ–≤": "kiev",
                "–≥–æ–Ω–∫–æ–Ω–≥": "hong kong",
                "—Å–∏–Ω–≥–∞–ø—É—Ä": "singapore",
                "—Å–µ—É–ª": "seoul",
                "–±–∞–Ω–≥–∫–æ–∫": "bangkok",
                "–¥—É–±–∞–π": "dubai",
                "—Å—Ç–∞–º–±—É–ª": "istanbul",
                "–∫–∞–∏—Ä": "cairo",
                "—Å–∏–¥–Ω–µ–π": "sydney",
                "–º–µ–ª—å–±—É—Ä–Ω": "melbourne",
                "–æ–∫–ª–µ–Ω–¥": "auckland",
                "–≥–∞–≤–∞–π–∏": "hawaii",
                "–≥–æ–Ω–æ–ª—É–ª—É": "honolulu",
                "–¥–µ–Ω–≤–µ—Ä": "denver",
                "—Ñ–∏–Ω–∏–∫—Å": "phoenix",
                "–ª–∞—Å-–≤–µ–≥–∞—Å": "las vegas",
                "–≤–µ–≥–∞—Å": "las vegas",
                "—Å–∞–Ω-—Ñ—Ä–∞–Ω—Ü–∏—Å–∫–æ": "san francisco",
                "–±–æ—Å—Ç–æ–Ω": "boston",
                "—Ñ–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è": "philadelphia",
                "–∞—Ç–ª–∞–Ω—Ç–∞": "atlanta",
                "–ø–∞–Ω–∞–º–∞": "panama city"
            }
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç
            search_city = args.lower()
            if search_city in cities_map:
                search_city = cities_map[search_city]
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º wttr.in –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –±–µ–∑ API –∫–ª—é—á–∞
            weather_url = f"https://wttr.in/{search_city}?format=j1&lang=ru"
            weather_response = requests.get(weather_url, timeout=10)
            
            if weather_response.status_code != 200:
                await message.edit(f"‚ùå –ì–æ—Ä–æ–¥ '{args}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
                
            weather_data = weather_response.json()
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ
            current = weather_data['current_condition'][0]
            temp = current['temp_C']
            feels_like = current['FeelsLikeC']
            humidity = current['humidity']
            wind_speed = current['windspeedKmph']
            wind_dir = current['winddir16Point']
            description = current['lang_ru'][0]['value']
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
            precipitation = current.get('precipMM', '0')
            visibility = current.get('visibility', 'N/A')
            pressure = current.get('pressure', 'N/A')
            
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–∑ –æ—Ç–≤–µ—Ç–∞ API
            location = weather_data.get('nearest_area', [{}])[0].get('areaName', [{}])[0].get('value', args)
            country = weather_data.get('nearest_area', [{}])[0].get('country', [{}])[0].get('value', '')
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≥–æ–¥–µ
            weather_emoji = {
                "—è—Å–Ω–æ": "‚òÄÔ∏è",
                "—Å–æ–ª–Ω–µ—á–Ω–æ": "‚òÄÔ∏è",
                "–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ —Å–æ–ª–Ω–µ—á–Ω–æ": "üå§Ô∏è",
                "–æ–±–ª–∞—á–Ω–æ": "‚òÅÔ∏è",
                "–ø–∞—Å–º—É—Ä–Ω–æ": "‚òÅÔ∏è",
                "–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –æ–±–ª–∞—á–Ω–æ": "üå•Ô∏è",
                "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å": "üå¶Ô∏è",
                "–¥–æ–∂–¥—å": "üåßÔ∏è",
                "–ª–∏–≤–µ–Ω—å": "üåßÔ∏è",
                "–≥—Ä–æ–∑–∞": "‚õàÔ∏è",
                "—Å–Ω–µ–≥": "‚ùÑÔ∏è",
                "—Å–Ω–µ–≥–æ–ø–∞–¥": "üå®Ô∏è",
                "—Ç—É–º–∞–Ω": "üå´Ô∏è",
                "–º–≥–ª–∞": "üå´Ô∏è"
            }
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –ø–æ–≥–æ–¥—ã
            weather_icon = "üå°Ô∏è"
            for key, emoji in weather_emoji.items():
                if key in description.lower():
                    weather_icon = emoji
                    break
            
            # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –¥–µ–Ω—å
            forecast = ""
            try:
                today = weather_data['weather'][0]
                max_temp = today['maxtempC']
                min_temp = today['mintempC']
                forecast = f"\nüîÆ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: <code>{min_temp}¬∞C ... {max_temp}¬∞C</code>"
            except:
                pass
            
            weather_text = f"""{weather_icon} <b>–ü–æ–≥–æ–¥–∞ –≤ {location}, {country}:</b>

üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <code>{temp}¬∞C</code> (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ <code>{feels_like}¬∞C</code>)
üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: <code>{humidity}%</code>
üí® –í–µ—Ç–µ—Ä: <code>{wind_speed} –∫–º/—á, {wind_dir}</code>
üëÅÔ∏è –í–∏–¥–∏–º–æ—Å—Ç—å: <code>{visibility} –∫–º</code>
üîΩ –î–∞–≤–ª–µ–Ω–∏–µ: <code>{pressure} –º–º —Ä—Ç.—Å—Ç.</code>
‚òÅÔ∏è –ü–æ–≥–æ–¥–∞: <code>{description}</code>{forecast}"""
            
            await message.edit(weather_text, parse_mode='html')
            
        except Exception as e:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã: {str(e)}")
    
    @loader.command()
    async def helpic(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .helpic
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–∞—Ö"""
        
        help_text = """üì± <b>–ö–æ–º–∞–Ω–¥—ã –º–æ–¥—É–ª—è:</b>

üîç <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
‚Ä¢ <code>.metainfo</code> - –¥–æ–∫—Å–µ—Ç –ª–∞—Ö–∞(–ª–∞—Ö–∞—à–∫—É)
‚Ä¢ <code>.deanon</code> - –¥–µ–∞–Ω–æ–Ω–∏—Ç –Ω–∞—Ö—É–π
‚Ä¢ <code>.doxgram</code> - —Å—Å—ã–æ–∫–∞ –Ω–∞ –¥–æ–∫—Å–≥—Ä–∞m
‚Ä¢ <code>.swat</code> - swat –Ω–∞—Ö—É–π
‚Ä¢ <code>.chan</code> - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ
‚Ä¢ <code>.time</code> - –≤—Ä–µ–º—è –≤ –≥–æ—Ä–æ–¥–µ
‚Ä¢ <code>.weather</code> - –ø–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ
‚Ä¢ <code>.helpic</code> - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥

‚ù§Ô∏è <b>–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
‚Ä¢ <code>.love</code> - –∞–Ω–∏–º–∞—Ü–∏—è —Å–µ—Ä–¥–µ—á–µ–∫
‚Ä¢ <code>.cat</code> - ASCII-–∞—Ä—Ç –∫–æ—Ç–∞
‚Ä¢ <code>.f</code> - Press F to pay respects
‚Ä¢ <code>.sosi</code> - –∞–Ω–∏–º–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
‚Ä¢ <code>.xxx</code> - –ø–æ–∏—Å–∫ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö (–ø—Ä–∏–∫–æ–ª)

üéôÔ∏è <b>–ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
‚Ä¢ <code>.voice</code> - –∏–∑–º–µ–Ω–∏—Ç—å –≥–æ–ª–æ—Å
‚Ä¢ <code>.voiceinfo</code> - –∏–Ω—Ñ–æ –æ –≥–æ–ª–æ—Å–æ–≤–æ–º –º–æ–¥—É–ª–µ

üë• <b>–†–ü –∫–æ–º–∞–Ω–¥—ã (–æ–±—ã—á–Ω—ã–µ):</b>
‚Ä¢ <code>.hug</code> - –æ–±–Ω—è—Ç—å
‚Ä¢ <code>.kiss</code> - –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å
‚Ä¢ <code>.pat</code> - –ø–æ–≥–ª–∞–¥–∏—Ç—å
‚Ä¢ <code>.slap</code> - —É–¥–∞—Ä–∏—Ç—å
‚Ä¢ <code>.poke</code> - —Ç—ã–∫–Ω—É—Ç—å
‚Ä¢ <code>.bite</code> - —É–∫—É—Å–∏—Ç—å
‚Ä¢ <code>.kill</code> - —É–±–∏—Ç—å
‚Ä¢ <code>.hit</code> - —É–¥–∞—Ä–∏—Ç—å
‚Ä¢ <code>.punch</code> - –¥–∞—Ç—å –ø–∏–Ω–∫–∞
‚Ä¢ <code>.wink</code> - –ø–æ–¥–º–∏–≥–Ω—É—Ç—å
‚Ä¢ <code>.lick</code> - –ª–∏–∑–Ω—É—Ç—å
‚Ä¢ <code>.cuddle</code> - –æ–±–Ω–∏–º–∞—Ç—å—Å—è
‚Ä¢ <code>.run</code> - —É–±–µ–∂–∞—Ç—å

üîû <b>–†–ü –∫–æ–º–∞–Ω–¥—ã (18+):</b>
‚Ä¢ <code>.spank</code> - —à–ª–µ–ø–Ω—É—Ç—å
‚Ä¢ <code>.fuck</code> - —Ç—Ä–∞—Ö–Ω—É—Ç—å
‚Ä¢ <code>.suck</code> - —Å–æ—Å–∞—Ç—å
‚Ä¢ <code>.cum</code> - –∫–æ–Ω—á–∏—Ç—å
‚Ä¢ <code>.dom</code> - –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞—Ç—å
‚Ä¢ <code>.sub</code> - –ø–æ–¥—á–∏–Ω–∏—Ç—å—Å—è
‚Ä¢ <code>.twerk</code> - —Ç–≤–µ—Ä–∫–∞—Ç—å
‚Ä¢ <code>.strip</code> - —Å—Ç—Ä–∏–ø—Ç–∏–∑
‚Ä¢ <code>.oral</code> - –æ—Ä–∞–ª
‚Ä¢ <code>.anal</code> - –∞–Ω–∞–ª
‚Ä¢ <code>.tie</code> - —Å–≤—è–∑–∞—Ç—å

by @kanal_ikca and @cmert_hikki"""
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.edit(help_text, parse_mode='html')
    
    @loader.command()
    async def swat(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .swat (–≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        swat –Ω–∞—Ö—É–π"""
        
        if not message.is_reply:
            await message.edit("‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            return
            
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user = await message.get_reply_message()
        user_info = await message.client.get_entity(user.sender_id)
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Å —ç—Ç–∞–ø–∞–º–∏ swat –æ–ø–µ—Ä–∞—Ü–∏–∏
        loading_steps = [
            "üîç –ü–æ–ª—É—á–µ–Ω–∏–µ IP –∞–¥—Ä–µ—Å–∞...",
            "üì± –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è...",
            "üöî –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∞—Ç—Ä—É–ª—è...",
            "üëÆ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ SWAT –∫–æ–º–∞–Ω–¥—ã...",
            "üö® –û–∫—Ä—É–∂–µ–Ω–∏–µ –∑–¥–∞–Ω–∏—è...",
            "üí• –í–∑–ª–æ–º –¥–≤–µ—Ä–µ–π...",
            "üî´ –ó–∞—á–∏—Å—Ç–∫–∞ –ø–æ–º–µ—â–µ–Ω–∏—è...",
            "üëÆ‚Äç‚ôÇÔ∏è –ó–∞–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º–æ–≥–æ...",
            "üöì –î–æ—Å—Ç–∞–≤–∫–∞ –≤ —É—á–∞—Å—Ç–æ–∫...",
            "üìù –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞..."
        ]
        
        for step in loading_steps:
            await message.edit(f"‚è≥ SWAT –û–ü–ï–†–ê–¶–ò–Ø: {step}")
            await asyncio.sleep(1.5)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        swat_text = f"""üö® <b>SWAT –û–ü–ï–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê</b>

üëÆ‚Äç‚ôÇÔ∏è –ü–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã–π: <code>{user_info.first_name}</code>
üÜî ID: <code>{user_info.id}</code>

üìù –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏:
‚Ä¢ –¢–≤–æ–π —Ö—É–π –∏–ª–∏ –ø–∏—Å—Ç–∞ –±—ã–ª –¥–µ—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω
‚Ä¢ –ó–∞–±—Ä–∞–Ω –≤ –ø–æ–ª–∏—Ü–µ–π—Å–∫–∏–π –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç
‚Ä¢ –û–∂–∏–¥–∞–µ—Ç —Å—É–¥–µ–±–Ω–æ–≥–æ —Ä–∞–∑–±–∏—Ä–∞—Ç–µ–ª—å—Å—Ç–≤–∞

‚öñÔ∏è –ü—Ä–∏–≥–æ–≤–æ—Ä: –ü–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –≤ –∫–∞–º–µ—Ä–µ —Å —Ä–µ—à–µ—Ç–∫–æ–π"""
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.edit(swat_text, parse_mode='html')
    
    @loader.command()
    async def chan(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .chan
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏"""
        
        chan_text = """üì¢ <b>–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª</b>

–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:
<a href="https://t.me/kanal_ikca">@kanal_ikca</a>

–ò–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ –∫–æ–¥ –±–æ—Ç–∞:
<code>.dlm https://raw.githubusercontent.com/Udploda/picurchik/refs/heads/main/metainfo.py</code>"""
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.edit(chan_text, parse_mode='html')
    
    @loader.command()
    async def love(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .love
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é —Å —Å–µ—Ä–¥–µ—á–∫–∞–º–∏"""
        
        # –°–ª–æ–∂–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è —Å —Å–µ—Ä–¥–µ—á–∫–∞–º–∏ –∏ –∫—Ä–∞—Å–∏–≤—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
        heart_frames = [
            # –ü–æ—è–≤–ª–µ–Ω–∏–µ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —Å–µ—Ä–¥—Ü–∞
            "üíì",
            "üíó",
            "üíñ",
            "üíò",
            "‚ù§Ô∏è",
            
            # –ü—É–ª—å—Å–∞—Ü–∏—è
            "‚ù§Ô∏è",
            "üíñ",
            "üíó",
            "üíì",
            "üíó",
            "üíñ",
            "‚ù§Ô∏è",
            
            # –£–≤–µ–ª–∏—á–µ–Ω–∏–µ
            "   ‚ù§Ô∏è   ",
            "  ‚ù§Ô∏è‚ù§Ô∏è  ",
            " ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è ",
            "‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è",
            
            # –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ
            "‚ù§Ô∏è   ‚ù§Ô∏è",
            " ‚ù§Ô∏è ‚ù§Ô∏è ",
            "  ‚ù§Ô∏è  ",
            " ‚ù§Ô∏è ‚ù§Ô∏è ",
            "‚ù§Ô∏è   ‚ù§Ô∏è",
            
            # –ö—Ä–∞—Å–∏–≤—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω
            "‚ù§Ô∏èüíï‚ù§Ô∏è",
            "üíï‚ù§Ô∏èüíï",
            "‚ù§Ô∏èüíï‚ù§Ô∏è",
            
            # –î–æ–∂–¥—å –∏–∑ —Å–µ—Ä–¥–µ—Ü
            "     üíñ     ",
            "   üíñ üíñ   ",
            " üíñ  üíñ  üíñ ",
            "üíñ  üíñ  üíñ  üíñ",
            
            # –£–∑–æ—Ä –∏–∑ —Å–µ—Ä–¥–µ—Ü
            "üíóüíóüíóüíóüíó",
            "üíó       üíó",
            "üíó       üíó",
            "üíó       üíó",
            "üíóüíóüíóüíóüíó",
            
            # –°–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–µ
            "üíìüíìüíìüíì",
            "‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è",
            "üíìüíìüíìüíì",
            "‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è",
            
            # –í—Ä–∞—â–µ–Ω–∏–µ
            "   ‚ù§Ô∏è   ",
            "  üíï    ",
            " üíñ     ",
            "üíó      ",
            "üíì      ",
            "     üíì ",
            "    üíó  ",
            "   üíñ   ",
            "  üíï    ",
            "   ‚ù§Ô∏è   ",
            
            # –ë–µ–≥—É—â–∞—è —Å—Ç—Ä–æ–∫–∞
            "‚ù§Ô∏è       ",
            " ‚ù§Ô∏è      ",
            "  ‚ù§Ô∏è     ",
            "   ‚ù§Ô∏è    ",
            "    ‚ù§Ô∏è   ",
            "     ‚ù§Ô∏è  ",
            "      ‚ù§Ô∏è ",
            "       ‚ù§Ô∏è",
            "      ‚ù§Ô∏è ",
            "     ‚ù§Ô∏è  ",
            "    ‚ù§Ô∏è   ",
            "   ‚ù§Ô∏è    ",
            "  ‚ù§Ô∏è     ",
            " ‚ù§Ô∏è      ",
            
            # –ë–æ–ª—å—à–æ–µ —Å–æ—Å—Ç–∞–≤–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ
            "  ‚ù§Ô∏è   ‚ù§Ô∏è  ",
            " ‚ù§Ô∏è‚ù§Ô∏è ‚ù§Ô∏è‚ù§Ô∏è ",
            "‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è",
            " ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è ",
            "  ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è  ",
            "   ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è   ",
            "    ‚ù§Ô∏è‚ù§Ô∏è    ",
            "     ‚ù§Ô∏è     ",
            
            # ASCII-–∞—Ä—Ç
            "  /\\  /\\  ",
            " /  \\/  \\ ",
            "/        \\",
            "\\        /",
            " \\      / ",
            "  \\    /  ",
            "   \\  /   ",
            "    \\/    ",
            
            # –ö–æ–º–±–∏–Ω–∞—Ü–∏—è —ç–º–æ–¥–∑–∏
            "üíñüíïüíìüíó",
            "üíï‚ù§Ô∏è‚ù§Ô∏èüíï",
            "üíì‚ù§Ô∏è‚ù§Ô∏èüíì",
            "üíóüíïüíìüíñ",
            
            # –§–∏–Ω–∞–ª—å–Ω—ã–π –±–æ–ª—å—à–æ–π —É–∑–æ—Ä
            "‚ù£Ô∏èüíïüíìüíó‚ù£Ô∏è",
            "üíï‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏èüíï",
            "üíì‚ù§Ô∏èüíñ‚ù§Ô∏èüíì",
            "üíó‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏èüíó",
            "‚ù£Ô∏èüíïüíìüíó‚ù£Ô∏è",
            
            # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—É–ª—å—Å–∞—Ü–∏—è
            "üíñüíñüíñüíñüíñ",
            "‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è",
            "üíñüíñüíñüíñüíñ",
            "‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è",
            
            # –§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ
            "üíù I üíù",
            "üíù LOVE üíù",
            "üíù YOU üíù",
        ]
        
        # –°–∫–æ—Ä–æ—Å—Ç–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ—Ä–µ–π–º–∞ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
        speeds = [0.2] * 5 + [0.15] * 5 + [0.3] * 4 + [0.3] * 5 + [0.25] * 3 + [0.25] * 4 + [0.3] * 5 + [0.2] * 4 + [0.2] * 10 + [0.15] * 14 + [0.3] * 8 + [0.4] * 8 + [0.25] * 4 + [0.35] * 5 + [0.4] * 4 + [0.7] * 3
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–∫–æ—Ä–æ—Å—Ç—è–º–∏
        for i, frame in enumerate(heart_frames):
            await message.edit(frame)
            await asyncio.sleep(speeds[i])
        
        # –§–∏–Ω–∞–ª—å–Ω–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–∑–æ—Ä–æ–º
        final_text = """
‚ù§Ô∏èüíñ‚ù§Ô∏èüíñ‚ù§Ô∏èüíñ‚ù§Ô∏è
üíñ  –Ø –¢–ï–ë–Ø  üíñ
‚ù§Ô∏è  –õ–Æ–ë–õ–Æ  ‚ù§Ô∏è
üíñ‚ù§Ô∏èüíñ‚ù§Ô∏èüíñ‚ù§Ô∏èüíñ"""
        
        await message.edit(final_text)
    
    @loader.command()
    async def xxx(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .xxx <–Ω–∞–∑–≤–∞–Ω–∏–µ>
        –ü–æ–∏—Å–∫ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö"""
        
        args = utils.get_args_raw(message)
        if not args:
            await message.edit("‚ùå –î–ª—è –ø–æ–∏—Å–∫–∞ –≤–≤–µ–¥–∏—Ç–µ: .xxx <–Ω–∞–∑–≤–∞–Ω–∏–µ>")
            return
            
        # –ü–µ—Ä–≤—ã–π —à–∞–≥ - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞
        verify_text = """üîû <b>–í–Ω–∏–º–∞–Ω–∏–µ! –ö–æ–Ω—Ç–µ–Ω—Ç 18+</b>

–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:
<code>.xxx verify {}</code>""".format(args)
        
        await message.edit(verify_text, parse_mode='html')
        
        # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            response = await message.client.wait_event(
                events.NewMessage(from_users=message.sender_id, pattern=r'\.xxx verify .*', timeout=60)
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ-–ø—Ä–∏–∫–æ–ª
            joke_text = """üòÇ <b>–ê—Ö —Ç—ã –º–∞–ª–æ–ª–µ—Ç–Ω–∏–π –ø–∏–∑–¥—é–∫!</b>

‚ùå –•—É–π —Ç–µ–±–µ, –∞ –Ω–µ –ø–æ—Ä–Ω–æ!

üö´ –ò–¥–∏ —É—Ä–æ–∫–∏ –¥–µ–ª–∞–π, —à–∫–æ–ª–æ—Ç–∞!"""
            
            await response.reply(joke_text, parse_mode='html')
            
        except asyncio.TimeoutError:
            await message.edit("‚ùå –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        except Exception as e:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
            
    @loader.command()
    async def cat(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .cat
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç ASCII-–∞—Ä—Ç —Å –∫–æ—Ç–æ–º"""
        
        cat_art = """
Ôºèl„ÄÅ    
ÔºàÔæüÔΩ§ ÔΩ° Ôºó  
 l  ~„ÉΩ   
 „Åò„Åóf_, )„Éé 
"""
        await message.edit(cat_art)
    
    @loader.command()
    async def f(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .f [—Ç–µ–∫—Å—Ç]
        Press F to pay respects"""
        
        args = utils.get_args_raw(message)
        if args:
            text = f"‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì\n‚îÉ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñÄ‚ñÄ‚ñÄ‚ñà‚ñà‚ñà‚ñÄ‚ñÄ‚ñÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñÄ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÄ‚ñà‚ñà‚ñà‚ñÄ‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ{args}‚îÉ\n‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ"
        else:
            text = "‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì\n‚îÉ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñÄ‚ñÄ‚ñÄ‚ñà‚ñà‚ñà‚ñÄ‚ñÄ‚ñÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚ñÄ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÄ‚ñà‚ñà‚ñà‚ñÄ‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÉ\n‚îÉ‚îÄ‚îÄF to pay respects‚îÄ‚îÄ‚îÉ\n‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ"
        
        await message.edit(text)
    
    @loader.command()
    async def sosi(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .sosi
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é —Ç–µ–∫—Å—Ç–∞"""
        
        frames = [
            "‚ñà‚ñÄ‚ñÄ ‚ñà‚ñë‚ñà ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñÄ ‚ñà‚ñÄ‚ñÄ\n‚ñà‚ñÑ‚ñà ‚ñà‚ñÑ‚ñà ‚ñà‚ñë‚ñÄ‚ñë‚ñà ‚ñà‚ñà‚ñÑ ‚ñà‚ñà‚ñÑ ‚ñÑ‚ñà ‚ñà‚ñà‚ñÑ",
            "üÖ¥üÖπ üÖºüÖ∏üÜÇüÜÇ üÖªüÖ¥üÖ≥üÖ∏",
            "üëÅÔ∏è –° –¢–û–ë–û–ô –ë–ê–ó–ê–†–Æ üëÅÔ∏è",
            "‚ùì –°–ö–û–õ–¨–ö–û –°–¢–û–ò–¢ –ë–ê–¢–û–ù–ß–ò–ö ‚ùì",
            "‚û°Ô∏è 5 –î–û–õ–õ–ê–†–û–í ‚¨ÖÔ∏è",
            "üî• –ù–ò–§–ò–ì–ê üî•",
            "‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è",
            "‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñë‚ñà\n‚ñë‚ñÄ‚ñÄ‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñÄ‚ñÄ‚ñà‚ñë‚ñà‚ñë‚ñà\n‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ",
            "‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñë‚ñà\n‚ñë‚ñÄ‚ñÄ‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñÄ‚ñÄ‚ñà‚ñë‚ñà‚ñë‚ñà\n‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ",
            "üíã –ó–ê 5 –ë–ê–ö–°–û–í –ù–ï –°–î–ï–õ–ê–ï–®–¨? üíµ",
            "üÖ±Ô∏èüÖ∞Ô∏è2Ô∏è‚É£üÖ∞Ô∏è‚ôå",
            "‚ñà‚ñÑ‚ñà ‚ñà‚ñÄ‚ñà ‚ñà‚ñë‚ñà ‚ñë ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñë‚ñà ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñÑ‚ñÄ\n‚ñà‚ñë‚ñà ‚ñà‚ñÑ‚ñà ‚ñà‚ñÑ‚ñà ‚ñë ‚ñà‚ñÑ‚ñà ‚ñà‚ñÑ‚ñà ‚ñà‚ñÑ‚ñÑ ‚ñà‚ñë‚ñà",
        ]
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        for frame in frames:
            await message.edit(frame)
            await asyncio.sleep(1.5)
        
        # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        final_text = """
‚ñà‚ñÄ ‚ñà‚ñÄ‚ñà ‚ñà‚ñÄ ‚ñà   ‚ñà‚ñÄ ‚ñà‚ñÄ‚ñà ‚ñà‚ñÄ ‚ñà
‚ñÑ‚ñà ‚ñà‚ñÑ‚ñà ‚ñÑ‚ñà ‚ñà‚ñÑ‚ñÑ ‚ñÑ‚ñà ‚ñà‚ñÑ‚ñà ‚ñÑ‚ñà ‚ñà‚ñÑ‚ñÑ"""
        
        await message.edit(final_text)
    
    @loader.command()
    async def rp(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .rp
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –†–ü –∫–æ–º–∞–Ω–¥"""
        
        rp_text = """üë• <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –†–ü –∫–æ–º–∞–Ω–¥—ã:</b>

<b>–û–±—ã—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</b>
‚Ä¢ <code>.hug</code> - –æ–±–Ω—è—Ç—å
‚Ä¢ <code>.kiss</code> - –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å
‚Ä¢ <code>.pat</code> - –ø–æ–≥–ª–∞–¥–∏—Ç—å
‚Ä¢ <code>.slap</code> - —É–¥–∞—Ä–∏—Ç—å
‚Ä¢ <code>.poke</code> - —Ç—ã–∫–Ω—É—Ç—å
‚Ä¢ <code>.bite</code> - —É–∫—É—Å–∏—Ç—å
‚Ä¢ <code>.kill</code> - —É–±–∏—Ç—å
‚Ä¢ <code>.hit</code> - —É–¥–∞—Ä–∏—Ç—å
‚Ä¢ <code>.punch</code> - –¥–∞—Ç—å –ø–∏–Ω–∫–∞
‚Ä¢ <code>.wink</code> - –ø–æ–¥–º–∏–≥–Ω—É—Ç—å
‚Ä¢ <code>.lick</code> - –ª–∏–∑–Ω—É—Ç—å
‚Ä¢ <code>.cuddle</code> - –æ–±–Ω–∏–º–∞—Ç—å—Å—è
‚Ä¢ <code>.run</code> - —É–±–µ–∂–∞—Ç—å

<b>–ü–æ—à–ª—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</b>
‚Ä¢ <code>.spank</code> - —à–ª–µ–ø–Ω—É—Ç—å
‚Ä¢ <code>.fuck</code> - —Ç—Ä–∞—Ö–Ω—É—Ç—å
‚Ä¢ <code>.suck</code> - —Å–æ—Å–∞—Ç—å
‚Ä¢ <code>.cum</code> - –∫–æ–Ω—á–∏—Ç—å
‚Ä¢ <code>.dom</code> - –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞—Ç—å
‚Ä¢ <code>.sub</code> - –ø–æ–¥—á–∏–Ω–∏—Ç—å—Å—è
‚Ä¢ <code>.twerk</code> - —Ç–≤–µ—Ä–∫–∞—Ç—å
‚Ä¢ <code>.strip</code> - —Å—Ç—Ä–∏–ø—Ç–∏–∑
‚Ä¢ <code>.oral</code> - –æ—Ä–∞–ª
‚Ä¢ <code>.anal</code> - –∞–Ω–∞–ª
‚Ä¢ <code>.tie</code> - —Å–≤—è–∑–∞—Ç—å

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É, –¥–æ–±–∞–≤–∏–≤ @ –∏–ª–∏ –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        
        await message.edit(rp_text, parse_mode='html')
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ RP –∫–æ–º–∞–Ω–¥
    async def _rp_handler(self, message, action, action_text, emoji_list, is_nsfw=False):
        """–û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ RP –∫–æ–º–∞–Ω–¥"""
        reply = await message.get_reply_message()
        args = utils.get_args_raw(message)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è –¥–µ–π—Å—Ç–≤–∏—è
        if reply:
            user = await message.client.get_entity(reply.sender_id)
            target_user = user.first_name
        elif args:
            target_user = args
        else:
            await message.edit(f"‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
        sender = await message.client.get_entity(message.sender_id)
        sender_name = sender.first_name
        
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —ç–º–æ–¥–∑–∏ –∏–∑ —Å–ø–∏—Å–∫–∞
        emoji = random.choice(emoji_list)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º NSFW –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        nsfw_warning = "üîû " if is_nsfw else ""
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        rp_text = f"{nsfw_warning}{emoji} <b>{sender_name}</b> {action_text} <b>{target_user}</b>"
        
        await message.edit(rp_text, parse_mode='html')
    
    # –û–±—ã—á–Ω—ã–µ RP –∫–æ–º–∞–Ω–¥—ã
    @loader.command()
    async def hug(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .hug <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –û–±–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["ü§ó", "ü´Ç", "üíï", "‚ù§Ô∏è", "üíû", "üå∏"]
        await self._rp_handler(message, "hug", "–æ–±–Ω–∏–º–∞–µ—Ç", emoji_list)
    
    @loader.command()
    async def kiss(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .kiss <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –ü–æ—Ü–µ–ª–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["üíã", "‚ù§Ô∏è", "üíì", "üòò", "üòö", "üíû"]
        await self._rp_handler(message, "kiss", "—Ü–µ–ª—É–µ—Ç", emoji_list)
    
    @loader.command()
    async def pat(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .pat <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –ü–æ–≥–ª–∞–¥–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["ü§ö", "üëã", "‚úã", "üñêÔ∏è", "ü´±", "‚ò∫Ô∏è"]
        await self._rp_handler(message, "pat", "–≥–ª–∞–¥–∏—Ç", emoji_list)
    
    @loader.command()
    async def slap(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .slap <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –£–¥–∞—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["üëã", "ü§ö", "‚úã", "üí•", "üò°", "ü´±"]
        await self._rp_handler(message, "slap", "—à–ª—ë–ø–∞–µ—Ç", emoji_list)
    
    @loader.command()
    async def poke(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .poke <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –¢—ã–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["üëâ", "üëÜ", "ü´µ", "üßê", "ü§®", "üòè"]
        await self._rp_handler(message, "poke", "—Ç—ã–∫–∞–µ—Ç", emoji_list)
    
    @loader.command()
    async def bite(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .bite <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –£–∫—É—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["üëÑ", "ü¶∑", "üò¨", "üòà", "üí¢", "üî•"]
        await self._rp_handler(message, "bite", "–∫—É—Å–∞–µ—Ç", emoji_list)
    
    @loader.command()
    async def kill(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .kill <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –£–±–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["üî™", "üíÄ", "‚ò†Ô∏è", "ü©∏", "‚ö∞Ô∏è", "üòµ"]
        await self._rp_handler(message, "kill", "—É–±–∏–≤–∞–µ—Ç", emoji_list)
    
    @loader.command()
    async def hit(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .hit <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –£–¥–∞—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["üëä", "ü§ú", "ü§õ", "üí•", "üëä", "üî•"]
        await self._rp_handler(message, "hit", "–±—å—ë—Ç", emoji_list)
    
    @loader.command()
    async def punch(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .punch <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –£–¥–∞—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["üëü", "üëû", "ü¶µ", "ü¶∂", "üë†", "üí•"]
        await self._rp_handler(message, "punch", "–ø–∏–Ω–∞–µ—Ç", emoji_list)
    
    @loader.command()
    async def wink(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .wink <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –ü–æ–¥–º–∏–≥–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        
        emoji_list = ["üòâ", "üòú", "ü´£", "üòè", "üòä", "üëÅÔ∏è"]
        await self._rp_handler(message, "wink", "–ø–æ–¥–º–∏–≥–∏–≤–∞–µ—Ç", emoji_list)
    
    @loader.command()
    async def lick(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .lick <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –õ–∏–∑–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["üëÖ", "üòõ", "üòù", "üí¶", "üòã", "ü§§"]
        await self._rp_handler(message, "lick", "–ª–∏–∂–µ—Ç", emoji_list)
    
    @loader.command()
    async def cuddle(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .cuddle <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –û–±–Ω–∏–º–∞—Ç—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
        
        emoji_list = ["ü´Ç", "üíï", "ü§ó", "üíû", "üíì", "üíó"]
        await self._rp_handler(message, "cuddle", "–æ–±–Ω–∏–º–∞–µ—Ç—Å—è —Å", emoji_list)
    
    @loader.command()
    async def run(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .run <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –£–±–µ–∂–∞—Ç—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["üèÉ", "üèÉ‚Äç‚ôÇÔ∏è", "üèÉ‚Äç‚ôÄÔ∏è", "üí®", "‚ö°", "üå™Ô∏è"]
        await self._rp_handler(message, "run", "—É–±–µ–≥–∞–µ—Ç –æ—Ç", emoji_list)
    
    # –ü–æ—à–ª—ã–µ RP –∫–æ–º–∞–Ω–¥—ã
    @loader.command()
    async def spank(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .spank <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –®–ª—ë–ø–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –ø–æ–ø–∫–µ"""
        
        emoji_list = ["üçë", "üëã", "üí•", "üòà", "üî•", "üí¢"]
        await self._rp_handler(message, "spank", "—à–ª—ë–ø–∞–µ—Ç –ø–æ –ø–æ–ø–∫–µ", emoji_list, is_nsfw=True)
    
    @loader.command()
    async def fuck(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .fuck <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –¢—Ä–∞—Ö–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["üî•", "üí¶", "üòà", "üçÜ", "üå∂Ô∏è", "üëâüëå"]
        await self._rp_handler(message, "fuck", "—Ç—Ä–∞—Ö–∞–µ—Ç", emoji_list, is_nsfw=True)
    
    @loader.command()
    async def suck(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .suck <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –°–æ—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        
        emoji_list = ["üëÖ", "üí¶", "üòÆ", "üçÜ", "üòà", "ü§§"]
        await self._rp_handler(message, "suck", "—Å–æ—Å—ë—Ç", emoji_list, is_nsfw=True)
    
    @loader.command()
    async def cum(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .cum <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –ö–æ–Ω—á–∏—Ç—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["üí¶", "üçÜ", "üíß", "üî•", "üò©", "üòà"]
        await self._rp_handler(message, "cum", "–∫–æ–Ω—á–∞–µ—Ç –Ω–∞", emoji_list, is_nsfw=True)
    
    @loader.command()
    async def dom(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .dom <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –î–æ–º–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
        
        emoji_list = ["üòà", "‚õìÔ∏è", "üî•", "üëë", "ü¶Æ", "ü§Ø"]
        await self._rp_handler(message, "dom", "–¥–æ–º–∏–Ω–∏—Ä—É–µ—Ç –Ω–∞–¥", emoji_list, is_nsfw=True)
    
    @loader.command()
    async def sub(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .sub <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –ü–æ–¥—á–∏–Ω–∏—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        
        emoji_list = ["üßé", "üôá", "üò©", "‚ò∫Ô∏è", "üòµ‚Äçüí´", "ü•µ"]
        await self._rp_handler(message, "sub", "–ø–æ–¥—á–∏–Ω—è–µ—Ç—Å—è", emoji_list, is_nsfw=True)
    
    @loader.command()
    async def twerk(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .twerk <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –¢–≤–µ—Ä–∫–∞—Ç—å –ø–µ—Ä–µ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
        
        emoji_list = ["üçë", "üíÉ", "üï∫", "üòè", "üî•", "üëÄ"]
        await self._rp_handler(message, "twerk", "—Ç–≤–µ—Ä–∫–∞–µ—Ç –ø–µ—Ä–µ–¥", emoji_list, is_nsfw=True)
    
    @loader.command()
    async def strip(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .strip <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –°—Ç–∞–Ω—Ü–µ–≤–∞—Ç—å —Å—Ç—Ä–∏–ø—Ç–∏–∑ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["üî•", "üëô", "üíÉ", "üòè", "üï∫", "üëÄ"]
        await self._rp_handler(message, "strip", "—Ç–∞–Ω—Ü—É–µ—Ç —Å—Ç—Ä–∏–ø—Ç–∏–∑ –¥–ª—è", emoji_list, is_nsfw=True)
    
    @loader.command()
    async def oral(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .oral <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –°–¥–µ–ª–∞—Ç—å –æ—Ä–∞–ª—å–Ω—ã–µ –ª–∞—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        
        emoji_list = ["üëÖ", "üí¶", "ü§§", "üòÆ", "üòõ", "üòù"]
        await self._rp_handler(message, "oral", "–¥–µ–ª–∞–µ—Ç –æ—Ä–∞–ª—å–Ω—ã–µ –ª–∞—Å–∫–∏", emoji_list, is_nsfw=True)
    
    @loader.command()
    async def anal(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .anal <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –ê–Ω–∞–ª—å–Ω—ã–µ —à–∞–ª–æ—Å—Ç–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
        
        emoji_list = ["üçë", "üëâ", "üî•", "üí¶", "üò©", "üòà"]
        await self._rp_handler(message, "anal", "–∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –∞–Ω–∞–ª–æ–º —Å", emoji_list, is_nsfw=True)
    
    @loader.command()
    async def tie(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .tie <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> (–∏–ª–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –°–≤—è–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        emoji_list = ["‚õìÔ∏è", "üîó", "üß∂", "üòà", "üî•", "üëÄ"]
        await self._rp_handler(message, "tie", "—Å–≤—è–∑—ã–≤–∞–µ—Ç", emoji_list, is_nsfw=True)
    
    @loader.command()
    async def voice(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .voice (–≤ –æ—Ç–≤–µ—Ç –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        –ú–µ–Ω—è–µ—Ç –≥–æ–ª–æ—Å –≤ –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–∏"""
        
        reply = await message.get_reply_message()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if not reply or not reply.voice:
            await message.edit("‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –≥–æ–ª–æ—Å–∞
        markup = await self._generate_voice_menu()
        
        await message.edit(
            "üéôÔ∏è <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≥–æ–ª–æ—Å–∞:</b>\n\n"
            "1Ô∏è‚É£ –ú—É–∂—Å–∫–æ–π –≥–æ–ª–æ—Å\n"
            "2Ô∏è‚É£ –ñ–µ–Ω—Å–∫–∏–π –≥–æ–ª–æ—Å\n"
            "3Ô∏è‚É£ –î–µ—Ç—Å–∫–∏–π –≥–æ–ª–æ—Å\n"
            "4Ô∏è‚É£ –†–æ–±–æ—Ç\n"
            "5Ô∏è‚É£ –ú–æ–Ω—Å—Ç—Ä\n\n"
            "üëâ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –≥–æ–ª–æ—Å–∞ (1-5)", 
            parse_mode='html'
        )
        
        # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            response = await message.client.wait_event(
                events.NewMessage(from_users=message.sender_id, pattern=r'^[1-5]$', timeout=60)
            )
            
            voice_choice = int(response.message.text)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
            await message.edit("‚è≥ <b>–û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...</b>", parse_mode='html')
            
            # –°–∫–∞—á–∏–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            voice_data = await reply.download_media(bytes)
            
            # –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
            progress_steps = ["‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú", "‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú", "‚¨õ‚¨õ‚¨ú‚¨ú‚¨ú", "‚¨õ‚¨õ‚¨õ‚¨ú‚¨ú", "‚¨õ‚¨õ‚¨õ‚¨õ‚¨ú", "‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ"]
            for step in progress_steps:
                await message.edit(f"‚è≥ <b>–û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...</b>\n\n{step}", parse_mode='html')
                await asyncio.sleep(0.8)
            
            # –ò–º–∏—Ç–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥–æ–ª–æ—Å–∞ (–Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –º—ã –ø—Ä–æ—Å—Ç–æ –±—É–¥–µ–º –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
            voice_types = {
                1: "–º—É–∂—Å–∫–∏–º",
                2: "–∂–µ–Ω—Å–∫–∏–º",
                3: "–¥–µ—Ç—Å–∫–∏–º",
                4: "—Ä–æ–±–æ—Ç–æ–º",
                5: "–º–æ–Ω—Å—Ç—Ä–æ–º"
            }
            
            await message.edit(f"‚úÖ <b>–ì–æ–ª–æ—Å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {voice_types[voice_choice]}!</b>\n\n‚è≥ <b>–û—Ç–ø—Ä–∞–≤–∫–∞...</b>", parse_mode='html')
            await asyncio.sleep(1.5)
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞—É–¥–∏–æ
            with tempfile.NamedTemporaryFile(suffix='.ogg', delete=False) as temp_file:
                temp_file.write(voice_data)
                temp_file_path = temp_file.name
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∞–π–ª (–Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π)
            caption = f"üéôÔ∏è –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {voice_types[voice_choice]} –≥–æ–ª–æ—Å"
            
            await message.client.send_file(
                message.chat_id,
                temp_file_path,
                voice_note=True,
                caption=caption
            )
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            os.remove(temp_file_path)
            
            # –£–¥–∞–ª—è–µ–º –Ω–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
            await message.delete()
            
        except asyncio.TimeoutError:
            await message.edit("‚ùå –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        except Exception as e:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
    
    async def _generate_voice_menu(self):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –≥–æ–ª–æ—Å–∞"""
        # –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ inline-–∫–Ω–æ–ø–æ–∫
        # –ù–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã —Å–µ–π—á–∞—Å –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º None
        return None
        
    # –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–∞ (–∏–º–∏—Ç–∞—Ü–∏—è)
    async def _convert_voice(self, voice_data, voice_type):
        """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≥–æ–ª–æ—Å –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ç–∏–ø–æ–º"""
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –º–æ–¥—É–ª–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∫–æ–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–∞
        # –°–µ–π—á–∞—Å –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        return voice_data
    
    @loader.command()
    async def voiceinfo(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .voiceinfo
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–æ–ª–æ—Å–æ–≤–æ–º –º–æ–¥—É–ª–µ"""
        
        info_text = """üéôÔ∏è <b>–ì–æ–ª–æ—Å–æ–≤–æ–π –º–æ–¥—É–ª—å</b>

üëâ <code>.voice</code> - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≥–æ–ª–æ—Å–∞ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
   –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≥–æ–ª–æ—Å–∞

üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞:</b>
‚Ä¢ –ú—É–∂—Å–∫–æ–π –≥–æ–ª–æ—Å - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º—É–∂—Å–∫–æ–π —Ç–µ–º–±—Ä
‚Ä¢ –ñ–µ–Ω—Å–∫–∏–π –≥–æ–ª–æ—Å - –≤—ã—Å–æ–∫–∏–π –∂–µ–Ω—Å–∫–∏–π —Ç–µ–º–±—Ä
‚Ä¢ –î–µ—Ç—Å–∫–∏–π –≥–æ–ª–æ—Å - –≥–æ–ª–æ—Å —Ä–µ–±–µ–Ω–∫–∞
‚Ä¢ –†–æ–±–æ—Ç - –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π –≥–æ–ª–æ—Å
‚Ä¢ –ú–æ–Ω—Å—Ç—Ä - –Ω–∏–∑–∫–∏–π –∏—Å–∫–∞–∂–µ–Ω–Ω—ã–π –≥–æ–ª–æ—Å

‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –¥–ª—è —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ. –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∞—É–¥–∏–æ."""
        
        await message.edit(info_text, parse_mode='html') 
